{"version":3,"sources":["views/Home.js","views/Services.js","views/Contacts.js","views/layouts/DefaultLayout.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","ProductName","Price","react_default","a","createElement","className","main","field","title","Component","Services","Contacts","LayoutDefault","react","id","href","onClick","e","preventDefault","jquery","toggleClass","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","react_router","exact","path","component","App","react_router_dom","DefaultLayout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c9678789.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [\r\n                { ProductName: \"Chai\", Price: 11 },\r\n                { ProductName: \"Chang\", Price: 22 }\r\n            ]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"grid\">\r\n                <Grid data={this.state.data}>\r\n                    <GridColumn field=\"ProductName\" title=\"Product name\" />\r\n                    <GridColumn field=\"Price\" />\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Services = () => (\r\n    <div>Services Page</div>\r\n);\r\n\r\nexport default Services;","import React from 'react';\r\n\r\nconst Contacts = () => (\r\n    <div>Contacts Page</div>\r\n);\r\n\r\nexport default Contacts;","import React, { Fragment } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n//import logo from './logo.svg';\r\n\r\nimport jquery from \"jquery\";\r\nimport Home from '../Home';\r\nimport Services from '../Services';\r\nimport Contacts from '../Contacts';\r\n\r\nconst LayoutDefault = (props) => (\r\n    <Fragment>\r\n        <div id=\"wrapper\" className=\"d-flex\">\r\n            <div className=\"bg-light border-right\" id=\"sidebar-wrapper\">\r\n                <div className=\"sidebar-heading\">Start Bootstrap </div>\r\n                <div className=\"list-group list-group-flush\">\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Dashboard</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Shortcuts</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Overview</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Events</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Profile</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Status</a>\r\n                </div>\r\n            </div>\r\n            <div id=\"page-content-wrapper\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\r\n                    <button className=\"btn btn-primary\" id=\"menu-toggle\" onClick={(e) => { e.preventDefault(); jquery('#wrapper').toggleClass('toggled'); }}>Toggle Menu</button>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Link</a>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Dropdown\r\n                                </a>\r\n                                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\r\n                                    <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                                    <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                    <div className=\"dropdown-divider\"></div>\r\n                                    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <h1>Public Place</h1>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home} />\r\n                        <Route exact path='/services' component={Services} />\r\n                        <Route exact path='/contacts' component={Contacts} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default LayoutDefault;","import React, { Component } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route\r\n} from 'react-router-dom';\r\n\r\nimport DefaultLayout from './views/layouts/DefaultLayout';\r\n\r\nimport 'bootstrap/dist/js/bootstrap.bundle'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@progress/kendo-theme-material/dist/all.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <Switch>\r\n                        <Route path=\"/\" component={DefaultLayout} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}