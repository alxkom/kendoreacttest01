{"version":3,"sources":["components/ImageParser.js","views/Home.js","views/Services.js","views/Contacts.js","views/layouts/DefaultLayout.js","App.js","serviceWorker.js","index.js"],"names":["ImageParser","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","imageData","isImage","jsonFile","parsingResult","selectedFiles","_this2","console","clear","length","file","getImagePreview","then","result","setState","imagePreview","startsWith","getJsonFile","reader","FileReader","Promise","resolve","reject","onerror","abort","Error","onloadend","e","readAsDataURL","onload","bytes","Array","from","Uint8Array","base64StringFile","btoa","map","item","String","fromCharCode","join","sizeInBytes","fileName","name","fileType","type","readAsArrayBuffer","event","_this3","preventDefault","inProgress","fetch","proxyurl","method","headers","Accept","Content-Type","body","JSON","stringify","params","concat","jsonrpc","id","res","json","error","message","code","catch","log","_this4","react_default","a","createElement","className","onChange","handleFileChange","target","files","src","alt","onClick","handleParseClick","disabled","viewBox","cx","cy","r","fill","strokeWidth","Component","Home","data","ProductName","Price","main","field","title","components_ImageParser","Services","Contacts","LayoutDefault","react","href","jquery","toggleClass","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","react_router","exact","path","component","App","react_router_dom","DefaultLayout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1d959d7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ImageParser extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            imageData: \"\",\r\n            isImage: false,\r\n            jsonFile: null,\r\n            parsingResult: \"\"\r\n        };\r\n    }\r\n\r\n    handleFileChange(selectedFiles) {\r\n        console.clear();\r\n\r\n        if (selectedFiles.length === 0) {\r\n            return;\r\n        }\r\n\r\n        var file = selectedFiles[0];\r\n\r\n        this.getImagePreview(file).then((result) => {\r\n            this.setState({\r\n                imagePreview: result.imageData,\r\n                isImage: result.imageData.startsWith(\"data:image/\"),\r\n                parsingResult: \"\"\r\n            })\r\n        })\r\n\r\n        this.getJsonFile(file).then((jsonFile) => {\r\n            this.setState({\r\n                jsonFile: jsonFile\r\n            })\r\n        });\r\n    }\r\n\r\n    getImagePreview(file) {\r\n        var reader = new FileReader();\r\n\r\n        return new Promise((resolve, reject) => {\r\n            reader.onerror = () => { reader.abort(); reject(new Error(\"Error parsing file\")); }\r\n            reader.onloadend = function(e) {\r\n                resolve({\r\n                    imageData: reader.result\r\n                });\r\n            };\r\n            reader.readAsDataURL(file);\r\n        });\r\n    }\r\n\r\n    getJsonFile(file) {\r\n        var reader = new FileReader();\r\n        return new Promise((resolve, reject) => {\r\n            reader.onerror = () => { reader.abort(); reject(new Error(\"Error parsing file\")); }\r\n            reader.onload = function() {\r\n                let bytes = Array.from(new Uint8Array(this.result));\r\n                let base64StringFile = btoa(bytes.map((item) => String.fromCharCode(item)).join(\"\"));\r\n                resolve({\r\n                    sizeInBytes: bytes.length,\r\n                    base64StringFile: base64StringFile,\r\n                    fileName: file.name,\r\n                    fileType: file.type\r\n                });\r\n            }\r\n            reader.readAsArrayBuffer(file);\r\n        });\r\n    }\r\n\r\n    handleParseClick(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            inProgress: true\r\n        });\r\n\r\n        const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\r\n        const url = \"https://mnist.cobrain.io/api/ivanx32_github/ivan3\";\r\n        fetch(proxyurl + url, {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"method\": \"predict_digit_file\",\r\n                \"params\": [`b'${this.state.jsonFile.base64StringFile}'`],\r\n                \"jsonrpc\": \"2.0\",\r\n                \"id\": 0\r\n            })\r\n        }).then(res => res.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    this.setState({\r\n                        parsingResult: `${res.error.message} [error code: ${res.error.code}]`,\r\n                        inProgress: false\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        parsingResult: `${res.result}`,\r\n                        inProgress: false\r\n                    });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('Image Parse Request failed : ' + error.message)\r\n                this.setState({\r\n                    parsingResult: `Error occurred: ${error.message}`,\r\n                    inProgress: false\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"img-parser-area\">\r\n                <input id=\"file-input\" type=\"file\" onChange={(e) => this.handleFileChange(e.target.files)} />\r\n                <br /><br /><br />\r\n                {this.state.imagePreview && (\r\n                    <div className=\"image-preview\">\r\n                        {this.state.jsonFile && (\r\n                            <span>Image Info: file name - '{this.state.jsonFile.fileName}', file type - '{this.state.jsonFile.fileType}', file size - {this.state.jsonFile.sizeInBytes} bytes.</span>\r\n                        )}\r\n                        <br />\r\n                        <span>Image Preview: {!this.state.isImage ? 'N/A' : ''}</span>\r\n                        <br />\r\n                        <img src={this.state.imagePreview} alt=\"\" />\r\n                    </div>\r\n                )}\r\n                <br />\r\n                {this.state.isImage && (\r\n                    <div className=\"image-parse\">\r\n                        <button onClick={(e) => this.handleParseClick(e)} disabled={this.state.inProgress}>Parse Image</button>\r\n                        {this.state.inProgress && (\r\n                            <svg className=\"spinner\" viewBox=\"0 0 50 50\">\r\n                                <circle className=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" strokeWidth=\"5\"></circle>\r\n                            </svg>\r\n                        )}\r\n                    </div>\r\n                )}\r\n                <br />\r\n                {this.state.parsingResult && (\r\n                    <div className=\"parsing-result\">\r\n                        Result: {this.state.parsingResult}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageParser;","import React, { Component } from 'react';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport ImageParser from '../components/ImageParser'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [\r\n                { ProductName: \"Chai\", Price: 11 },\r\n                { ProductName: \"Chang\", Price: 22 }\r\n            ]\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"grid\">\r\n                <Grid data={this.state.data}>\r\n                    <GridColumn field=\"ProductName\" title=\"Product name\" />\r\n                    <GridColumn field=\"Price\" />\r\n                </Grid>\r\n                <br />\r\n                <br />\r\n                <ImageParser></ImageParser>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst Services = () => (\r\n    <div>Services Page</div>\r\n);\r\n\r\nexport default Services;","import React from 'react';\r\n\r\nconst Contacts = () => (\r\n    <div>Contacts Page</div>\r\n);\r\n\r\nexport default Contacts;","import React, { Fragment } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n//import logo from './logo.svg';\r\n\r\nimport jquery from \"jquery\";\r\nimport Home from '../Home';\r\nimport Services from '../Services';\r\nimport Contacts from '../Contacts';\r\n\r\nconst LayoutDefault = (props) => (\r\n    <Fragment>\r\n        <div id=\"wrapper\" className=\"d-flex\">\r\n            <div className=\"bg-light border-right\" id=\"sidebar-wrapper\">\r\n                <div className=\"sidebar-heading\">Start Bootstrap </div>\r\n                <div className=\"list-group list-group-flush\">\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Dashboard</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Shortcuts</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Overview</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Events</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Profile</a>\r\n                    <a href=\"#\" className=\"list-group-item list-group-item-action bg-light\">Status</a>\r\n                </div>\r\n            </div>\r\n            <div id=\"page-content-wrapper\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light border-bottom\">\r\n                    <button className=\"btn btn-primary\" id=\"menu-toggle\" onClick={(e) => { e.preventDefault(); jquery('#wrapper').toggleClass('toggled'); }}>Toggle Menu</button>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\r\n                            <li className=\"nav-item active\">\r\n                                <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-link\" href=\"#\">Link</a>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Dropdown\r\n                                </a>\r\n                                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\r\n                                    <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                                    <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                                    <div className=\"dropdown-divider\"></div>\r\n                                    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"container-fluid\">\r\n                    <h1>Public Place</h1>\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home} />\r\n                        <Route exact path='/services' component={Services} />\r\n                        <Route exact path='/contacts' component={Contacts} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nexport default LayoutDefault;","import React, { Component } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Route\r\n} from 'react-router-dom';\r\n\r\nimport DefaultLayout from './views/layouts/DefaultLayout';\r\n\r\nimport 'bootstrap/dist/js/bootstrap.bundle'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport '@progress/kendo-theme-material/dist/all.css';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <Switch>\r\n                        <Route path=\"/\" component={DefaultLayout} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}